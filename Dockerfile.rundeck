FROM rundeck/rundeck:5.14.1

# Switch to root to install packages
USER root

# Update package list and install required tools
RUN apt-get update && apt-get install -y \
    curl \
    git \
    jq \
    python3 \
    python3-pip \
    docker.io \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Install Google Cloud SDK to /usr/local
RUN curl -sSL https://sdk.cloud.google.com | bash -s -- --install-dir=/usr/local
ENV PATH="/usr/local/google-cloud-sdk/bin:${PATH}"

# Install Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

# Make scripts directory executable
RUN mkdir -p /scripts /templates && chmod +x /scripts

# Create workspace directory with proper permissions
RUN mkdir -p /tmp/workspace && chown rundeck /tmp/workspace

# Accept docker group ID as build argument
ARG DOCKER_GID

# Add rundeck user to docker group for Docker socket access
# Use the host's docker group ID to match socket permissions
# Remove existing docker group and recreate with correct GID
RUN groupdel docker || true && \
    groupadd -g ${DOCKER_GID} docker && \
    usermod -aG docker rundeck

# Declare workspace as a volume
VOLUME ["/tmp/workspace"]

# Switch back to rundeck user
USER rundeck

# Initialize gcloud on container startup
RUN echo 'if [ -f "$GOOGLE_APPLICATION_CREDENTIALS" ]; then gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS" 2>/dev/null || true; fi' >> /home/rundeck/.bashrc
